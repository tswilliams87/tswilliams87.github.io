import { DynamoDBClient, ScanCommand, PutItemCommand } from "@aws-sdk/client-dynamodb";

const dynamoDBClient = new DynamoDBClient({ region: process.env.AWS_REGION });

export const handler = async (event) => {
    // Define the allowed origins for CORS
    const allowedOrigins = [
        "https://master.d23009d3fju64i.amplifyapp.com",
        "https://tswilliams87.github.io", // Replace with your second domain
    ];

    // Get the Origin header from the incoming request
    const origin = event.headers.origin;
    const allowOrigin = allowedOrigins.includes(origin) ? origin : null;

    try {
        if (event.httpMethod === "OPTIONS") {
            // Handle preflight (OPTIONS) requests
            return {
                statusCode: 204,
                headers: {
                    "Access-Control-Allow-Origin": allowOrigin || "null",
                    "Access-Control-Allow-Headers": "Content-Type",
                    "Access-Control-Allow-Methods": "OPTIONS, POST, GET",
                },
                body: null,
            };
        }

        if (event.resource === "/profiles/latest-id" && event.httpMethod === "GET") {
            // Fetch the latest profile ID from DynamoDB
            const params = {
                TableName: process.env.TABLE_NAME,
                ProjectionExpression: "id"
            };

            const command = new ScanCommand(params);
            const response = await dynamoDBClient.send(command);

            // Find the maximum ID
            const ids = response.Items.map(item => parseInt(item.id.S, 10));
            const maxId = Math.max(...ids);

            return {
                statusCode: 200,
                headers: {
                    "Access-Control-Allow-Origin": allowOrigin || "null",
                },
                body: JSON.stringify({ lastId: maxId }),
            };
        }

        if (event.resource === "/profiles" && event.httpMethod === "POST") {
            // Parse the request body
            const body = JSON.parse(event.body);

            // Validate input
            if (!body.id || !body.name || !body.picture || !body.favoriteThing) {
                throw new Error("Missing required fields: id, name, picture, or favoriteThing.");
            }

            // Prepare the parameters for the PutItemCommand
            const params = {
                TableName: process.env.TABLE_NAME,
                Item: {
                    id: { S: body.id },
                    name: { S: body.name },
                    picture: { S: body.picture },
                    favoriteThing: { S: body.favoriteThing },
                },
            };

            // Save the profile to the DynamoDB table
            const command = new PutItemCommand(params);
            const response = await dynamoDBClient.send(command);

            return {
                statusCode: 200,
                headers: {
                    "Access-Control-Allow-Origin": allowOrigin || "null",
                },
                body: JSON.stringify({
                    message: "Profile saved successfully!",
                    response,
                }),
            };
        }

        // Handle invalid routes
        return {
            statusCode: 404,
            headers: {
                "Access-Control-Allow-Origin": allowOrigin || "null",
            },
            body: JSON.stringify({ message: "Not Found" }),
        };
    } catch (error) {
        console.error("Error:", error);

        return {
            statusCode: 500,
            headers: {
                "Access-Control-Allow-Origin": allowOrigin || "null",
            },
            body: JSON.stringify({
                message: "An error occurred",
                error: error.message,
            }),
        };
    }
};