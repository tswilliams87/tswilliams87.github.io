import { DynamoDBClient, PutItemCommand } from "@aws-sdk/client-dynamodb";

const dynamoDBClient = new DynamoDBClient({ region: process.env.AWS_REGION });

export const handler = async (event) => {
    // Define the allowed origins
    const allowedOrigins = [
        "https://master.d23009d3fju64i.amplifyapp.com",
        "https://tswilliams87.github.io", // Replace with your second domain
    ];

    // Get the Origin header from the incoming request
    const origin = event.headers.origin;

    // Determine if the Origin is allowed
    const allowOrigin = allowedOrigins.includes(origin) ? origin : null;

    // Handle preflight (OPTIONS) requests for CORS
    if (event.httpMethod === "OPTIONS") {
        return {
            statusCode: 200,
            headers: {
                "Access-Control-Allow-Origin": allowOrigin || "null", // Allow only if the origin is valid
                "Access-Control-Allow-Headers": "Content-Type",
                "Access-Control-Allow-Methods": "OPTIONS, POST", // Add other methods as needed
            },
            body: null, // OPTIONS requests don't require a body
        };
    }

    try {
        // Extract the DynamoDB table name from the environment variables
        const tableName = process.env.TABLE_NAME;

        // Parse the request body
        const body = JSON.parse(event.body);

        // Prepare the parameters for the PutItemCommand
        const params = {
            TableName: tableName,
            Item: {
                id: { S: body.id },
                name: { S: body.name },
                picture: { S: body.picture },
                favoriteThing: { S: body.favoriteThing },
            },
        };

        // Save the profile to the DynamoDB table
        const command = new PutItemCommand(params);
        const response = await dynamoDBClient.send(command);

        // Return a success response with CORS headers
        return {
            statusCode: 200,
            headers: {
                "Access-Control-Allow-Origin": allowOrigin || "null", // Allow only if the origin is valid
            },
            body: JSON.stringify({
                message: "Profile saved successfully!",
                response,
            }),
        };
    } catch (error) {
        console.error("Error saving profile:", error);

        // Return an error response with CORS headers
        return {
            statusCode: 500,
            headers: {
                "Access-Control-Allow-Origin": allowOrigin || "null", // Allow only if the origin is valid
            },
            body: JSON.stringify({
                message: "Failed to save profile",
                error: error.message,
            }),
        };
    }
};